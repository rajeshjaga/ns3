// udp_client.c
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define PORT 12345   // Port for communication
#define MAXLINE 1024 // Buffer size

int main(int argc, char *argv[]) {
  int sockfd;
  char buffer[MAXLINE];
  struct sockaddr_in server_addr;
  FILE *fp;

  if (argc != 3) {
    printf("Usage: %s <Server_IP> <File>\n", argv[0]);
    exit(1);
  }

  // Open file and create socket
  if ((fp = fopen(argv[2], "rb")) == NULL) {
    perror("File open failed");
    exit(1);
  }
  if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
    perror("Socket failed");
    exit(1);
  }

  // Set up server address
  memset(&server_addr, 0, sizeof(server_addr));
  server_addr.sin_family = AF_INET;
  server_addr.sin_port = htons(PORT);
  if (inet_pton(AF_INET, argv[1], &server_addr.sin_addr) <= 0) {
    perror("Invalid IP");
    exit(1);
  }

  // Send filename to server
  sendto(sockfd, argv[2], strlen(argv[2]), 0, (struct sockaddr *)&server_addr,
         sizeof(server_addr));

  // Read and send file in chunks
  while (1) {
    int n = fread(buffer, 1, MAXLINE, fp);
    if (n <= 0)
      break;
    sendto(sockfd, buffer, n, 0, (struct sockaddr *)&server_addr,
           sizeof(server_addr));
  }

  printf("File sent successfully\n");
  fclose(fp);
  close(sockfd);
  return 0;
}
